
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Dell
 */
public class inventory extends javax.swing.JFrame {
    public static Connection conn=null;
    public static ResultSet rs=null;
     public static ResultSet rs1=null;
    public static Statement stmt=null;
    public static Statement stmt1=null;
    public int flag=0;
    /**
     * Creates new form inventory
     */
    public inventory() {
        try{
            Class.forName("com.mysql.jdbc.Driver");
            
            conn=DriverManager.getConnection("jdbc:mysql://localhost:3306/test","root","ssd");
            
            stmt=conn.createStatement();
            stmt1=conn.createStatement();
            
            String n1="SELECT * FROM test.inventry ";
            rs=stmt.executeQuery(n1);
        //rs.next();
            
             //String sql;
            //sql = "SELECT *  FROM Admins";
             //rs = stmt.executeQuery(sql);
            //rs.next();
             
        }
         catch(Exception e)
        {
        }
        initComponents();
        
        
        update.setVisible(false);
        delete.setVisible(false);
        find.setVisible(false);
        
         next.setVisible(false);
        prev.setVisible(false);
        firsti.setVisible(false);
        lasti.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        kitchen = new javax.swing.JRadioButton();
        prev = new javax.swing.JButton();
        elec = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();
        paint = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        find = new javax.swing.JButton();
        lasti = new javax.swing.JButton();
        show = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        carpentry = new javax.swing.JRadioButton();
        firsti = new javax.swing.JButton();
        civil = new javax.swing.JRadioButton();
        update = new javax.swing.JButton();
        next = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        additem = new javax.swing.JButton();
        newitem = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        plumbing = new javax.swing.JRadioButton();
        aitems = new javax.swing.JTextField();
        delete = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        pcost = new javax.swing.JTextField();
        pid = new javax.swing.JTextField();
        pname = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        refresh = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel1.setOpaque(false);

        kitchen.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        kitchen.setForeground(new java.awt.Color(153, 0, 0));
        kitchen.setText("6-Kitchen");
        kitchen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kitchenActionPerformed(evt);
            }
        });

        prev.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        prev.setForeground(new java.awt.Color(153, 0, 0));
        prev.setText("<");
        prev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prevActionPerformed(evt);
            }
        });

        elec.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        elec.setForeground(new java.awt.Color(153, 0, 0));
        elec.setText("3-Electrical");
        elec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                elecActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(153, 0, 0));
        jButton1.setText("Search/Modify");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        paint.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        paint.setForeground(new java.awt.Color(153, 0, 0));
        paint.setText("1-Paint");
        paint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paintActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 0, 0));
        jLabel1.setText("Product ID");

        find.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        find.setForeground(new java.awt.Color(153, 0, 0));
        find.setText("Find");
        find.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findActionPerformed(evt);
            }
        });

        lasti.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lasti.setForeground(new java.awt.Color(153, 0, 0));
        lasti.setText(">>");
        lasti.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lastiActionPerformed(evt);
            }
        });

        show.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        show.setForeground(new java.awt.Color(153, 0, 0));
        show.setText("Show Items");
        show.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(153, 0, 0));
        jLabel6.setText("Select Department");

        carpentry.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        carpentry.setForeground(new java.awt.Color(153, 0, 0));
        carpentry.setText("5-Carpentry");
        carpentry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                carpentryActionPerformed(evt);
            }
        });

        firsti.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        firsti.setForeground(new java.awt.Color(153, 0, 0));
        firsti.setText("<<");
        firsti.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstiActionPerformed(evt);
            }
        });

        civil.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        civil.setForeground(new java.awt.Color(153, 0, 0));
        civil.setText("2-Civil");
        civil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                civilActionPerformed(evt);
            }
        });

        update.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        update.setForeground(new java.awt.Color(153, 0, 0));
        update.setText("Update");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        next.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        next.setForeground(new java.awt.Color(153, 0, 0));
        next.setText(">");
        next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(153, 0, 0));
        jLabel3.setText("Available Items");

        additem.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        additem.setForeground(new java.awt.Color(153, 0, 0));
        additem.setText("Add");
        additem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                additemActionPerformed(evt);
            }
        });

        newitem.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        newitem.setForeground(new java.awt.Color(153, 0, 0));
        newitem.setText("New");
        newitem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newitemActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(153, 0, 0));
        jLabel4.setText("Cost");

        plumbing.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        plumbing.setForeground(new java.awt.Color(153, 0, 0));
        plumbing.setText("4-Plumbing");
        plumbing.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plumbingActionPerformed(evt);
            }
        });

        aitems.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        aitems.setForeground(new java.awt.Color(153, 0, 0));

        delete.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        delete.setForeground(new java.awt.Color(153, 0, 0));
        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(153, 0, 0));
        jLabel2.setText("Product Name");

        pcost.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        pcost.setForeground(new java.awt.Color(153, 0, 0));
        pcost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pcostActionPerformed(evt);
            }
        });

        pid.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        pid.setForeground(new java.awt.Color(153, 0, 0));

        pname.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        pname.setForeground(new java.awt.Color(153, 0, 0));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 102, 102));
        jLabel7.setText("INVENTRY");

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/loginpage/h.jpg"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        refresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/loginpage/re.jpg"))); // NOI18N
        refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshActionPerformed(evt);
            }
        });

        jButton3.setForeground(new java.awt.Color(0, 153, 255));
        jButton3.setText("Departments");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(111, 111, 111)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(show)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(kitchen)
                            .addComponent(jLabel6)
                            .addComponent(paint)
                            .addComponent(civil)
                            .addComponent(elec)
                            .addComponent(plumbing)
                            .addComponent(carpentry))
                        .addGap(302, 302, 302)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(94, 94, 94)
                                .addComponent(update)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(delete)
                                .addGap(492, 492, 492))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(firsti)
                                        .addGap(18, 18, 18)
                                        .addComponent(prev)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(next)
                                        .addGap(18, 18, 18)
                                        .addComponent(lasti))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel1)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel4))
                                        .addGap(64, 64, 64)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(pid, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(pname, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(aitems, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(pcost, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(newitem)
                                        .addGap(203, 203, 203)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(find)
                                .addGap(387, 387, 387))))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(additem)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(412, 412, 412))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(562, 562, 562)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addGap(18, 18, 18)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(refresh, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(104, 104, 104))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(106, 106, 106)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7)
                    .addComponent(jButton2)
                    .addComponent(refresh)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(55, 55, 55)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(pid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(find))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(pname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(aitems, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(pcost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(paint)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(civil)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(elec)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(plumbing)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(carpentry)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(kitchen)
                        .addGap(122, 122, 122)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(show)
                            .addComponent(firsti)
                            .addComponent(prev)
                            .addComponent(next)
                            .addComponent(lasti))))
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(additem)
                    .addComponent(jButton1)
                    .addComponent(newitem))
                .addGap(101, 101, 101)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(update)
                    .addComponent(delete))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        getContentPane().add(jPanel1, gridBagConstraints);

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/loginpage/Untitled2.png"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        getContentPane().add(jLabel5, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void kitchenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kitchenActionPerformed
        // TODO add your handling code here:
        if(kitchen.isSelected())
        {
            paint.setVisible(false);
            civil.setVisible(false);
            elec.setVisible(false);
            carpentry.setVisible(false);
            // kitchen.setVisible(false);
            plumbing.setVisible(false);
            try{

                String n1="SELECT * FROM test.inventry WHERE Dept_No=6";
                rs=stmt.executeQuery(n1);
            }
            catch(Exception e)
            {
                e.printStackTrace();
            }

            //   dno="6";
        }
    }//GEN-LAST:event_kitchenActionPerformed

    private void prevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prevActionPerformed
        // TODO add your handling code here:
        try{
            /* String pdno=null;
            if(paint.isSelected())
            {
                pdno="1";
            }

            if( civil.isSelected())
            {
                pdno="2";
            }

            if(elec.isSelected())
            {
                pdno="3";
            }

            if(plumbing.isSelected())
            {
                pdno="4";
            }

            if(carpentry.isSelected())
            {
                pdno="5";
            }

            if(kitchen.isSelected())
            {
                pdno="6";
            }

            String n1="SELECT * FROM test.inventry WHERE Dept_No='"+pdno+"'";
            rs=stmt.executeQuery(n1);
            //rs1.next();*/
            if(rs.previous())
            {

                String pid_i=rs.getString("Product_ID");
                String pname_i=rs.getString("Product_Name");
                String ai=rs.getString("Available_Items");
                String cost=rs.getString("Cost");
                //String pdno=rs.getString("Dept_No");

                pid.setText(pid_i);
                pname.setText(pname_i);
                aitems.setText(ai);
                pcost.setText(cost);

            }

            else
            {
                JOptionPane.showMessageDialog(null, "End of Database!");
            }

        }
        catch(Exception e)
        {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "End Of Items!");
        }
    }//GEN-LAST:event_prevActionPerformed

    private void elecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_elecActionPerformed
        // TODO add your handling code here:
        if(elec.isSelected())
        {
            paint.setVisible(false);
            civil.setVisible(false);
            // elec.setVisible(false);
            carpentry.setVisible(false);
            kitchen.setVisible(false);
            plumbing.setVisible(false);
            try{

                String n1="SELECT * FROM test.inventry WHERE Dept_No=3";
                rs=stmt.executeQuery(n1);
            }
            catch(Exception e)
            {
                e.printStackTrace();
            }

            //    dno="3";
        }
    }//GEN-LAST:event_elecActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        pname.setVisible(false);
        aitems.setVisible(false);
        pcost.setVisible(false);

        find.setVisible(true);
        
        paint.setVisible(true);
        paint.setSelected(false);
        
        civil.setVisible(true);
        civil.setSelected(false);
        
        carpentry.setVisible(true);
        carpentry.setSelected(false);
        
        plumbing.setVisible(true);
        plumbing.setSelected(false);
        
        elec.setVisible(true);
        elec.setSelected(false);
        
        kitchen.setVisible(true);
        kitchen.setSelected(false);
        pid.setText(null);
        //update.setVisible(true);
        //delete.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void paintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paintActionPerformed
        // TODO add your handling code here:
        if(paint.isSelected())
        {
            civil.setVisible(false);
            elec.setVisible(false);
            carpentry.setVisible(false);
            kitchen.setVisible(false);
            plumbing.setVisible(false);
            try{

                String n1="SELECT * FROM test.inventry WHERE Dept_No=1";
                rs=stmt.executeQuery(n1);
            }
            catch(Exception e)
            {
                e.printStackTrace();
            }
            //   dno="1";
        }
    }//GEN-LAST:event_paintActionPerformed

    private void findActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findActionPerformed
        // TODO add your handling code here:
        try{
            String pd=pid.getText();
            if(paint.isSelected()&&pd.startsWith("1"))
            {
             String f1="SELECT * FROM test.inventry WHERE Product_ID='"+pd+"'";
            rs=stmt.executeQuery(f1);
            rs.next();
            }
            
            else if(civil.isSelected()&&pd.startsWith("2"))
            {
                String f1="SELECT * FROM test.inventry WHERE Product_ID='"+pd+"'";
            rs=stmt.executeQuery(f1);
            rs.next();
            }
            else if(elec.isSelected()&&pd.startsWith("3"))
            {
                String f1="SELECT * FROM test.inventry WHERE Product_ID='"+pd+"'";
            rs=stmt.executeQuery(f1);
            rs.next();
            }
            else if(plumbing.isSelected()&&pd.startsWith("4"))
            {
                String f1="SELECT * FROM test.inventry WHERE Product_ID='"+pd+"'";
            rs=stmt.executeQuery(f1);
            rs.next();
            }
            else if(carpentry.isSelected()&&pd.startsWith("5"))
            {
                String f1="SELECT * FROM test.inventry WHERE Product_ID='"+pd+"'";
            rs=stmt.executeQuery(f1);
            rs.next();
            }
            else if(kitchen.isSelected()&&pd.startsWith("6"))
            {
                String f1="SELECT * FROM test.inventry WHERE Product_ID='"+pd+"'";
            rs=stmt.executeQuery(f1);
            rs.next();
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Enter dept no first!");
                jButton1.doClick();
                
            }
           

            
            

            String dname=rs.getString("Product_Name");
            String dai=rs.getString("Available_Items");
            String dcost=rs.getString("Cost");
            String pdno=rs.getString("Dept_No");

            if(pdno.equals("1"))
            {
                paint.setSelected(true);
            }

            if(pdno=="2")
            {
                civil.setSelected(true);
            }

            if(pdno=="3")
            {
                elec.setSelected(true);
            }

            if(pdno=="4")
            {
                plumbing.setSelected(true);
            }

            if(pdno=="5")
            {
                carpentry.setSelected(true);
            }

            if(pdno=="6")
            {
                kitchen.setSelected(true);
            }

            pname.setVisible(true);
            aitems.setVisible(true);
            pcost.setVisible(true);

            pname.setText(dname);
            aitems.setText(dai);
            pcost.setText(dcost);

            JOptionPane.showMessageDialog(null, "Item Found!");

            update.setVisible(true);
            delete.setVisible(true);
        }
        catch(Exception e)
        {
            e.printStackTrace();

            JOptionPane.showMessageDialog(null, "Item Not Found!");
        }
    }//GEN-LAST:event_findActionPerformed

    private void lastiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lastiActionPerformed
        // TODO add your handling code here:
        try{
            /*String pdno=null;
            if(paint.isSelected())
            {
                pdno="1";
            }

            if( civil.isSelected())
            {
                pdno="2";
            }

            if(elec.isSelected())
            {
                pdno="3";
            }

            if(plumbing.isSelected())
            {
                pdno="4";
            }

            if(carpentry.isSelected())
            {
                pdno="5";
            }

            if(kitchen.isSelected())
            {
                pdno="6";
            }

            String n1="SELECT * FROM test.inventry WHERE Dept_No='"+pdno+"'";
            rs=stmt.executeQuery(n1);
            //rs1.next();*/
            if(rs.last())
            {

                String pid_i=rs.getString("Product_ID");
                String pname_i=rs.getString("Product_Name");
                String ai=rs.getString("Available_Items");
                String cost=rs.getString("Cost");
                //String pdno=rs.getString("Dept_No");

                pid.setText(pid_i);
                pname.setText(pname_i);
                aitems.setText(ai);
                pcost.setText(cost);

            }

            else
            {
                JOptionPane.showMessageDialog(null, "End of Database!");
            }

        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_lastiActionPerformed

    private void showActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showActionPerformed
        // TODO add your handling code here:
        next.setVisible(true);
        prev.setVisible(true);
        firsti.setVisible(true);
        lasti.setVisible(true);
        show.setVisible(false);
    }//GEN-LAST:event_showActionPerformed

    private void carpentryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_carpentryActionPerformed
        // TODO add your handling code here:
        if(carpentry.isSelected())
        {
            paint.setVisible(false);
            civil.setVisible(false);
            elec.setVisible(false);
            // carpentry.setVisible(false);
            kitchen.setVisible(false);
            plumbing.setVisible(false);
            try{

                String n1="SELECT * FROM test.inventry WHERE Dept_No=5";
                rs=stmt.executeQuery(n1);
            }
            catch(Exception e)
            {
                e.printStackTrace();
            }

            //   dno="5";
        }
    }//GEN-LAST:event_carpentryActionPerformed

    private void firstiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstiActionPerformed
        // TODO add your handling code here:
        try{
            /*String pdno=null;
            if(paint.isSelected())
            {
                pdno="1";
            }

            if( civil.isSelected())
            {
                pdno="2";
            }

            if(elec.isSelected())
            {
                pdno="3";
            }

            if(plumbing.isSelected())
            {
                pdno="4";
            }

            if(carpentry.isSelected())
            {
                pdno="5";
            }

            if(kitchen.isSelected())
            {
                pdno="6";
            }

            String n1="SELECT * FROM test.inventry WHERE Dept_No='"+pdno+"'";
            rs=stmt.executeQuery(n1);
            //rs1.next();*/
            if(rs.first())
            {

                String pid_i=rs.getString("Product_ID");
                String pname_i=rs.getString("Product_Name");
                String ai=rs.getString("Available_Items");
                String cost=rs.getString("Cost");
                //String pdno=rs.getString("Dept_No");

                pid.setText(pid_i);
                pname.setText(pname_i);
                aitems.setText(ai);
                pcost.setText(cost);

            }

            else
            {
                JOptionPane.showMessageDialog(null, "End of Database!");
            }

        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_firstiActionPerformed

    private void civilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_civilActionPerformed
        // TODO add your handling code here:
        if(civil.isSelected())
        {
            paint.setVisible(false);
            // civil.setVisible(false);
            elec.setVisible(false);
            carpentry.setVisible(false);
            kitchen.setVisible(false);
            plumbing.setVisible(false);
            try{

                String n1="SELECT * FROM test.inventry WHERE Dept_No=2";
                rs=stmt.executeQuery(n1);
            }
            catch(Exception e)
            {
                e.printStackTrace();
            }

            //dno="2";
        }
    }//GEN-LAST:event_civilActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        // TODO add your handling code here

        try{
            String dno=null;

            if(paint.isSelected())
            {
                civil.setSelected(false);
                elec.setSelected(false);
                carpentry.setSelected(false);
                kitchen.setSelected(false);
                plumbing.setSelected(false);

                // paint.setVisible(false);
                civil.setVisible(false);
                elec.setVisible(false);
                carpentry.setVisible(false);
                kitchen.setVisible(false);
                plumbing.setVisible(false);

                dno="1";
            }

            if(civil.isSelected())
            {
                paint.setSelected(false);
                elec.setSelected(false);
                carpentry.setSelected(false);
                kitchen.setSelected(false);
                plumbing.setSelected(false);

                paint.setVisible(false);
                // civil.setVisible(false);
                elec.setVisible(false);
                carpentry.setVisible(false);
                kitchen.setVisible(false);
                plumbing.setVisible(false);

                dno="2";
            }

            if(elec.isSelected())
            {
                civil.setSelected(false);
                paint.setSelected(false);
                carpentry.setSelected(false);
                kitchen.setSelected(false);
                plumbing.setSelected(false);

                paint.setVisible(false);
                civil.setVisible(false);
                // elec.setVisible(false);
                carpentry.setVisible(false);
                kitchen.setVisible(false);
                plumbing.setVisible(false);
                dno="3";
            }

            if(plumbing.isSelected())
            {
                civil.setSelected(false);
                elec.setSelected(false);
                carpentry.setSelected(false);
                kitchen.setSelected(false);
                paint.setSelected(false);

                paint.setVisible(false);
                civil.setVisible(false);
                elec.setVisible(false);
                carpentry.setVisible(false);
                kitchen.setVisible(false);
                // plumbing.setVisible(false);
                dno="4";
            }

            if(carpentry.isSelected())
            {
                civil.setSelected(false);
                elec.setSelected(false);
                paint.setSelected(false);
                kitchen.setSelected(false);
                plumbing.setSelected(false);

                paint.setVisible(false);
                civil.setVisible(false);
                elec.setVisible(false);
                // carpentry.setVisible(false);
                kitchen.setVisible(false);
                plumbing.setVisible(false);

                dno="5";
            }

            if(kitchen.isSelected())
            {
                civil.setSelected(false);
                elec.setSelected(false);
                carpentry.setSelected(false);
                paint.setSelected(false);
                plumbing.setSelected(false);

                paint.setVisible(false);
                civil.setVisible(false);
                elec.setVisible(false);
                carpentry.setVisible(false);
                // kitchen.setVisible(false);
                plumbing.setVisible(false);

                dno="6";
            }

            String pname_i=pname.getText();
            String pid_i=pid.getText();
            String ai=aitems.getText();
            String cost=pcost.getText();

            String a1="UPDATE test.inventry SET Product_ID='"+pid_i+"',Product_Name='"+pname_i+"',Available_Items='"+ai+"',Cost='"+cost+"',Dept_No='"+dno+"' WHERE Product_ID='"+pid_i+"'";
            stmt.executeUpdate(a1);
            JOptionPane.showMessageDialog(null, "Item Updated Successfully!");
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_updateActionPerformed

    private void nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextActionPerformed
        // TODO add your handling code here:
        try{
            /*String pdno=null;
            if(paint.isSelected())
            {
                pdno="1";
            }

            if( civil.isSelected())
            {
                pdno="2";
            }

            if(elec.isSelected())
            {
                pdno="3";
            }

            if(plumbing.isSelected())
            {
                pdno="4";
            }

            if(carpentry.isSelected())
            {
                pdno="5";
            }

            if(kitchen.isSelected())
            {
                pdno="6";
            }

            String n1="SELECT * FROM test.inventry WHERE Dept_No='"+pdno+"'";
            rs=stmt.executeQuery(n1);*/
            //rs1.next();
            if(rs.next())
            {

                String pid_i=rs.getString("Product_ID");
                String pname_i=rs.getString("Product_Name");
                String ai=rs.getString("Available_Items");
                String cost=rs.getString("Cost");
                //String pdno=rs.getString("Dept_No");

                pid.setText(pid_i);
                pname.setText(pname_i);
                aitems.setText(ai);
                pcost.setText(cost);

            }

            else
            {
                JOptionPane.showMessageDialog(null, "End of Database!");
            }

        }
        catch(Exception e)
        {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "End Of Items!");
        }
    }//GEN-LAST:event_nextActionPerformed

    private void additemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_additemActionPerformed
        // TODO add your handling code here:
        try{
            if(flag==1)
            {
            String dno=null;

            if(paint.isSelected())
            {
                dno="1";

            }

            if(civil.isSelected())
            {

                dno="2";
            }

            if(elec.isSelected())
            {

                dno="3";
            }

            if(plumbing.isSelected())
            {

                dno="4";
            }

            if(carpentry.isSelected())
            {

                dno="5";
            }

            if(kitchen.isSelected())
            {

                dno="6";
            }

            String pname_i=pname.getText();
            String pid_i=pid.getText();
            String ai=aitems.getText();
            String cost=pcost.getText();

            String a1="INSERT INTO test.inventry VALUES ('"+pid_i+"','"+pname_i+"','"+ai+"','"+cost+"','"+dno+"')";
            stmt.executeUpdate(a1);
            JOptionPane.showMessageDialog(null, "Item Added Successfully!");
            new inventory().setVisible(true);
            }
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_additemActionPerformed

    private void newitemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newitemActionPerformed
        // TODO add your handling code here:

        pid.setText(null);
        pname.setText(null);
        aitems.setText(null);
        pcost.setText(null);
        flag=1;
    }//GEN-LAST:event_newitemActionPerformed

    private void plumbingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plumbingActionPerformed
        // TODO add your handling code here:
        if(plumbing.isSelected())
        {
            paint.setVisible(false);
            civil.setVisible(false);
            elec.setVisible(false);
            carpentry.setVisible(false);
            kitchen.setVisible(false);
            // plumbing.setVisible(false);
            try{

                String n1="SELECT * FROM test.inventry WHERE Dept_No=4";
                rs=stmt.executeQuery(n1);
            }
            catch(Exception e)
            {
                e.printStackTrace();
            }

            //dno="4";
        }
    }//GEN-LAST:event_plumbingActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
        try{
            String del=pid.getText();

            String d1="DELETE FROM test.inventry WHERE Product_ID='"+del+"'";
            stmt.executeUpdate(del);
            JOptionPane.showMessageDialog(null, "Item Deleted Successfully!");

        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_deleteActionPerformed

    private void pcostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pcostActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pcostActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        new home().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshActionPerformed
        // TODO add your handling code here:
        new inventory().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_refreshActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        new depts().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new inventory().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton additem;
    private javax.swing.JTextField aitems;
    private javax.swing.JRadioButton carpentry;
    private javax.swing.JRadioButton civil;
    private javax.swing.JButton delete;
    private javax.swing.JRadioButton elec;
    private javax.swing.JButton find;
    private javax.swing.JButton firsti;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton kitchen;
    private javax.swing.JButton lasti;
    private javax.swing.JButton newitem;
    private javax.swing.JButton next;
    private javax.swing.JRadioButton paint;
    private javax.swing.JTextField pcost;
    private javax.swing.JTextField pid;
    private javax.swing.JRadioButton plumbing;
    private javax.swing.JTextField pname;
    private javax.swing.JButton prev;
    private javax.swing.JButton refresh;
    private javax.swing.JButton show;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
